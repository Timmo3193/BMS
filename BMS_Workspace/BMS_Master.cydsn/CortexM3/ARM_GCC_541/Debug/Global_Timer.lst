ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Global_Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Global_Timer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Global_Timer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Global_Timer_Enable, %function
  25              	Global_Timer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Global_Timer.c"
   1:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Global_Timer.c **** * File Name: Global_Timer.c
   3:Generated_Source\PSoC5/Global_Timer.c **** * Version 2.80
   4:Generated_Source\PSoC5/Global_Timer.c **** *
   5:Generated_Source\PSoC5/Global_Timer.c **** * Description:
   6:Generated_Source\PSoC5/Global_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Global_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Global_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Global_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Global_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Global_Timer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Global_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Global_Timer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Global_Timer.c **** *
  15:Generated_Source\PSoC5/Global_Timer.c **** * Note:
  16:Generated_Source\PSoC5/Global_Timer.c **** *
  17:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Global_Timer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Global_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Global_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Global_Timer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Global_Timer.c **** 
  24:Generated_Source\PSoC5/Global_Timer.c **** #include "Global_Timer.h"
  25:Generated_Source\PSoC5/Global_Timer.c **** 
  26:Generated_Source\PSoC5/Global_Timer.c **** uint8 Global_Timer_initVar = 0u;
  27:Generated_Source\PSoC5/Global_Timer.c **** 
  28:Generated_Source\PSoC5/Global_Timer.c **** 
  29:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_Init
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 2


  31:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Global_Timer.c **** *
  33:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
  34:Generated_Source\PSoC5/Global_Timer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Global_Timer.c **** *
  36:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
  37:Generated_Source\PSoC5/Global_Timer.c **** *  void
  38:Generated_Source\PSoC5/Global_Timer.c **** *
  39:Generated_Source\PSoC5/Global_Timer.c **** * Return:
  40:Generated_Source\PSoC5/Global_Timer.c **** *  void
  41:Generated_Source\PSoC5/Global_Timer.c **** *
  42:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_Init(void) 
  44:Generated_Source\PSoC5/Global_Timer.c **** {
  45:Generated_Source\PSoC5/Global_Timer.c ****     #if(!Global_Timer_UsingFixedFunction)
  46:Generated_Source\PSoC5/Global_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Global_Timer.c ****             uint8 Global_Timer_interruptState;
  48:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Global_Timer.c **** 
  50:Generated_Source\PSoC5/Global_Timer.c ****     #if (Global_Timer_UsingFixedFunction)
  51:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= Global_Timer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Global_Timer.c **** 
  54:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Global_Timer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_CONTROL2 &= ((uint8)(~Global_Timer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Global_Timer.c **** 
  59:Generated_Source\PSoC5/Global_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_CONTROL3 &= ((uint8)(~Global_Timer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Global_Timer.c **** 
  63:Generated_Source\PSoC5/Global_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Global_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Global_Timer.c **** 
  69:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Global_Timer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Global_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Global_Timer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Global_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Global_Timer.c **** 
  76:Generated_Source\PSoC5/Global_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Global_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Global_Timer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Global_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Global_Timer.c **** 
  82:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Global_Timer.c **** 
  84:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Global_Timer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Global_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL2 |= Global_Timer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 3


  88:Generated_Source\PSoC5/Global_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Global_Timer.c **** 
  90:Generated_Source\PSoC5/Global_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Global_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 &= ((uint8)(~Global_Timer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 |= Global_Timer_CTRL_RCOD;
  94:Generated_Source\PSoC5/Global_Timer.c **** 
  95:Generated_Source\PSoC5/Global_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 &= ((uint8)(~Global_Timer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 |= Global_Timer_CTRL_ENBL;
  98:Generated_Source\PSoC5/Global_Timer.c **** 
  99:Generated_Source\PSoC5/Global_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Global_Timer.c ****                 Global_Timer_CONTROL3 |= Global_Timer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Global_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Global_Timer.c **** 
 103:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Global_Timer.c **** 
 105:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_RT1 &= ((uint8)(~Global_Timer_RT1_MASK));
 107:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_RT1 |= Global_Timer_SYNC;
 108:Generated_Source\PSoC5/Global_Timer.c **** 
 109:Generated_Source\PSoC5/Global_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_RT1 &= ((uint8)(~Global_Timer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_RT1 |= Global_Timer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Global_Timer.c **** 
 113:Generated_Source\PSoC5/Global_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL2 |= Global_Timer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Global_Timer.c **** 
 117:Generated_Source\PSoC5/Global_Timer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_WritePeriod(Global_Timer_INIT_PERIOD);
 119:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_WriteCounter(Global_Timer_INIT_PERIOD);
 120:Generated_Source\PSoC5/Global_Timer.c **** 
 121:Generated_Source\PSoC5/Global_Timer.c ****     #if (Global_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CAPTURE_COUNT_CTRL |= Global_Timer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_SetCaptureCount(Global_Timer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Global_Timer.c **** 
 126:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UsingFixedFunction)
 127:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_SetCaptureMode(Global_Timer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Global_Timer.c **** 
 131:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Global_Timer.c ****             #if (!Global_Timer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Global_Timer.c ****                 if (0u == (Global_Timer_CONTROL & Global_Timer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Global_Timer.c ****                 {
 135:Generated_Source\PSoC5/Global_Timer.c ****                     Global_Timer_SetTriggerMode(Global_Timer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Global_Timer.c ****                 }
 137:Generated_Source\PSoC5/Global_Timer.c ****             #endif /* (!Global_Timer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Global_Timer.c **** 
 140:Generated_Source\PSoC5/Global_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Global_Timer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Global_Timer.c **** 
 144:Generated_Source\PSoC5/Global_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 4


 145:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_STATUS_AUX_CTRL |= Global_Timer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Global_Timer.c **** 
 147:Generated_Source\PSoC5/Global_Timer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Global_Timer.c ****         CyExitCriticalSection(Global_Timer_interruptState);
 149:Generated_Source\PSoC5/Global_Timer.c **** 
 150:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_EnableTriggerMode)
 151:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_EnableTrigger();
 152:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Global_Timer.c **** 		
 154:Generated_Source\PSoC5/Global_Timer.c **** 		
 155:Generated_Source\PSoC5/Global_Timer.c ****         #if (Global_Timer_InterruptOnCaptureCount && !Global_Timer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Global_Timer.c ****             Global_Timer_SetInterruptCount(Global_Timer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Global_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Global_Timer.c **** 
 159:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_ClearFIFO();
 160:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Global_Timer.c **** 
 162:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_SetInterruptMode(Global_Timer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Global_Timer.c **** }
 164:Generated_Source\PSoC5/Global_Timer.c **** 
 165:Generated_Source\PSoC5/Global_Timer.c **** 
 166:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_Enable
 168:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Global_Timer.c **** *
 170:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 171:Generated_Source\PSoC5/Global_Timer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Global_Timer.c **** *
 173:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 174:Generated_Source\PSoC5/Global_Timer.c **** *  void
 175:Generated_Source\PSoC5/Global_Timer.c **** *
 176:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 177:Generated_Source\PSoC5/Global_Timer.c **** *  void
 178:Generated_Source\PSoC5/Global_Timer.c **** *
 179:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_Enable(void) 
 181:Generated_Source\PSoC5/Global_Timer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE1:
  36              		.size	Global_Timer_Enable, .-Global_Timer_Enable
  37 0002 00BF     		.section	.text.Global_Timer_Stop,"ax",%progbits
  38              		.align	2
  39              		.global	Global_Timer_Stop
  40              		.thumb
  41              		.thumb_func
  42              		.type	Global_Timer_Stop, %function
  43              	Global_Timer_Stop:
  44              	.LFB3:
 182:Generated_Source\PSoC5/Global_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Global_Timer.c ****     #if (Global_Timer_UsingFixedFunction)
 184:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_GLOBAL_ENABLE |= Global_Timer_BLOCK_EN_MASK;
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 5


 185:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_GLOBAL_STBY_ENABLE |= Global_Timer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Global_Timer.c **** 
 188:Generated_Source\PSoC5/Global_Timer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED || Global_Timer_UsingFixedFunction)
 190:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL |= Global_Timer_CTRL_ENABLE;
 191:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Global_Timer.c **** }
 193:Generated_Source\PSoC5/Global_Timer.c **** 
 194:Generated_Source\PSoC5/Global_Timer.c **** 
 195:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_Start
 197:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Global_Timer.c **** *
 199:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 200:Generated_Source\PSoC5/Global_Timer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Global_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Global_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Global_Timer.c **** *
 204:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 205:Generated_Source\PSoC5/Global_Timer.c **** *  void
 206:Generated_Source\PSoC5/Global_Timer.c **** *
 207:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 208:Generated_Source\PSoC5/Global_Timer.c **** *  void
 209:Generated_Source\PSoC5/Global_Timer.c **** *
 210:Generated_Source\PSoC5/Global_Timer.c **** * Global variables:
 211:Generated_Source\PSoC5/Global_Timer.c **** *  Global_Timer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Global_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Global_Timer.c **** *
 214:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_Start(void) 
 216:Generated_Source\PSoC5/Global_Timer.c **** {
 217:Generated_Source\PSoC5/Global_Timer.c ****     if(Global_Timer_initVar == 0u)
 218:Generated_Source\PSoC5/Global_Timer.c ****     {
 219:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_Init();
 220:Generated_Source\PSoC5/Global_Timer.c **** 
 221:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Global_Timer.c ****     }
 223:Generated_Source\PSoC5/Global_Timer.c **** 
 224:Generated_Source\PSoC5/Global_Timer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_Enable();
 226:Generated_Source\PSoC5/Global_Timer.c **** }
 227:Generated_Source\PSoC5/Global_Timer.c **** 
 228:Generated_Source\PSoC5/Global_Timer.c **** 
 229:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_Stop
 231:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Global_Timer.c **** *
 233:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 234:Generated_Source\PSoC5/Global_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Global_Timer.c **** *  interrupts.
 236:Generated_Source\PSoC5/Global_Timer.c **** *
 237:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 238:Generated_Source\PSoC5/Global_Timer.c **** *  void
 239:Generated_Source\PSoC5/Global_Timer.c **** *
 240:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 241:Generated_Source\PSoC5/Global_Timer.c **** *  void
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 6


 242:Generated_Source\PSoC5/Global_Timer.c **** *
 243:Generated_Source\PSoC5/Global_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Global_Timer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Global_Timer.c **** *
 246:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_Stop(void) 
 248:Generated_Source\PSoC5/Global_Timer.c **** {
  45              		.loc 1 248 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	Global_Timer_Stop, .-Global_Timer_Stop
  54 0002 00BF     		.section	.text.Global_Timer_SetInterruptMode,"ax",%progbits
  55              		.align	2
  56              		.global	Global_Timer_SetInterruptMode
  57              		.thumb
  58              		.thumb_func
  59              		.type	Global_Timer_SetInterruptMode, %function
  60              	Global_Timer_SetInterruptMode:
  61              	.LFB4:
 249:Generated_Source\PSoC5/Global_Timer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Global_Timer.c ****     #if(!Global_Timer_UDB_CONTROL_REG_REMOVED || Global_Timer_UsingFixedFunction)
 251:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= ((uint8)(~Global_Timer_CTRL_ENABLE));
 252:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Global_Timer.c **** 
 254:Generated_Source\PSoC5/Global_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Global_Timer.c ****     #if (Global_Timer_UsingFixedFunction)
 256:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_GLOBAL_ENABLE &= ((uint8)(~Global_Timer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Global_Timer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Global_Timer.c **** }
 260:Generated_Source\PSoC5/Global_Timer.c **** 
 261:Generated_Source\PSoC5/Global_Timer.c **** 
 262:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SetInterruptMode
 264:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Global_Timer.c **** *
 266:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 267:Generated_Source\PSoC5/Global_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Global_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Global_Timer.c **** *  be selected.
 270:Generated_Source\PSoC5/Global_Timer.c **** *
 271:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 272:Generated_Source\PSoC5/Global_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Global_Timer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Global_Timer.c **** *
 275:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 276:Generated_Source\PSoC5/Global_Timer.c **** *  void
 277:Generated_Source\PSoC5/Global_Timer.c **** *
 278:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Global_Timer.c **** {
  62              		.loc 1 280 0
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 7


  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL0:
 281:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_STATUS_MASK = interruptMode;
  68              		.loc 1 281 0
  69 0000 014B     		ldr	r3, .L4
  70 0002 1870     		strb	r0, [r3]
  71 0004 7047     		bx	lr
  72              	.L5:
  73 0006 00BF     		.align	2
  74              	.L4:
  75 0008 84640040 		.word	1073767556
  76              		.cfi_endproc
  77              	.LFE4:
  78              		.size	Global_Timer_SetInterruptMode, .-Global_Timer_SetInterruptMode
  79              		.section	.text.Global_Timer_SoftwareCapture,"ax",%progbits
  80              		.align	2
  81              		.global	Global_Timer_SoftwareCapture
  82              		.thumb
  83              		.thumb_func
  84              		.type	Global_Timer_SoftwareCapture, %function
  85              	Global_Timer_SoftwareCapture:
  86              	.LFB5:
 282:Generated_Source\PSoC5/Global_Timer.c **** }
 283:Generated_Source\PSoC5/Global_Timer.c **** 
 284:Generated_Source\PSoC5/Global_Timer.c **** 
 285:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SoftwareCapture
 287:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Global_Timer.c **** *
 289:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 290:Generated_Source\PSoC5/Global_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Global_Timer.c **** *
 292:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 293:Generated_Source\PSoC5/Global_Timer.c **** *  void
 294:Generated_Source\PSoC5/Global_Timer.c **** *
 295:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 296:Generated_Source\PSoC5/Global_Timer.c **** *  void
 297:Generated_Source\PSoC5/Global_Timer.c **** *
 298:Generated_Source\PSoC5/Global_Timer.c **** * Side Effects:
 299:Generated_Source\PSoC5/Global_Timer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Global_Timer.c **** *
 301:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Global_Timer.c **** {
  87              		.loc 1 303 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Global_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Global_Timer.c ****     #if(Global_Timer_UsingFixedFunction)
 306:Generated_Source\PSoC5/Global_Timer.c ****         (void)CY_GET_REG16(Global_Timer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Global_Timer.c ****     #else
 308:Generated_Source\PSoC5/Global_Timer.c ****         (void)CY_GET_REG8(Global_Timer_COUNTER_LSB_PTR_8BIT);
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 8


  92              		.loc 1 308 0
  93 0000 014B     		ldr	r3, .L7
  94 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95 0004 7047     		bx	lr
  96              	.L8:
  97 0006 00BF     		.align	2
  98              	.L7:
  99 0008 04640040 		.word	1073767428
 100              		.cfi_endproc
 101              	.LFE5:
 102              		.size	Global_Timer_SoftwareCapture, .-Global_Timer_SoftwareCapture
 103              		.section	.text.Global_Timer_ReadStatusRegister,"ax",%progbits
 104              		.align	2
 105              		.global	Global_Timer_ReadStatusRegister
 106              		.thumb
 107              		.thumb_func
 108              		.type	Global_Timer_ReadStatusRegister, %function
 109              	Global_Timer_ReadStatusRegister:
 110              	.LFB6:
 309:Generated_Source\PSoC5/Global_Timer.c ****     #endif/* (Global_Timer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Global_Timer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Global_Timer.c **** }
 312:Generated_Source\PSoC5/Global_Timer.c **** 
 313:Generated_Source\PSoC5/Global_Timer.c **** 
 314:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadStatusRegister
 316:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Global_Timer.c **** *
 318:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 319:Generated_Source\PSoC5/Global_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Global_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Global_Timer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Global_Timer.c **** *
 323:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 324:Generated_Source\PSoC5/Global_Timer.c **** *  void
 325:Generated_Source\PSoC5/Global_Timer.c **** *
 326:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 327:Generated_Source\PSoC5/Global_Timer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Global_Timer.c **** *
 329:Generated_Source\PSoC5/Global_Timer.c **** * Side Effects:
 330:Generated_Source\PSoC5/Global_Timer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Global_Timer.c **** *
 332:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Global_Timer.c **** uint8   Global_Timer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Global_Timer.c **** {
 111              		.loc 1 334 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Global_Timer.c ****     return (Global_Timer_STATUS);
 116              		.loc 1 335 0
 117 0000 014B     		ldr	r3, .L10
 118 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Global_Timer.c **** }
 119              		.loc 1 336 0
 120 0004 7047     		bx	lr
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 9


 121              	.L11:
 122 0006 00BF     		.align	2
 123              	.L10:
 124 0008 64640040 		.word	1073767524
 125              		.cfi_endproc
 126              	.LFE6:
 127              		.size	Global_Timer_ReadStatusRegister, .-Global_Timer_ReadStatusRegister
 128              		.section	.text.Global_Timer_ReadPeriod,"ax",%progbits
 129              		.align	2
 130              		.global	Global_Timer_ReadPeriod
 131              		.thumb
 132              		.thumb_func
 133              		.type	Global_Timer_ReadPeriod, %function
 134              	Global_Timer_ReadPeriod:
 135              	.LFB7:
 337:Generated_Source\PSoC5/Global_Timer.c **** 
 338:Generated_Source\PSoC5/Global_Timer.c **** 
 339:Generated_Source\PSoC5/Global_Timer.c **** #if (!Global_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Global_Timer.c **** 
 341:Generated_Source\PSoC5/Global_Timer.c **** 
 342:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadControlRegister
 344:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Global_Timer.c **** *
 346:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 347:Generated_Source\PSoC5/Global_Timer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Global_Timer.c **** *
 349:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 350:Generated_Source\PSoC5/Global_Timer.c **** *  void
 351:Generated_Source\PSoC5/Global_Timer.c **** *
 352:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 353:Generated_Source\PSoC5/Global_Timer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Global_Timer.c **** *
 355:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Global_Timer.c **** uint8 Global_Timer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Global_Timer.c **** {
 358:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Global_Timer.c ****         return ((uint8)Global_Timer_CONTROL);
 360:Generated_Source\PSoC5/Global_Timer.c ****     #else
 361:Generated_Source\PSoC5/Global_Timer.c ****         return (0);
 362:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* (!Global_Timer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Global_Timer.c **** }
 364:Generated_Source\PSoC5/Global_Timer.c **** 
 365:Generated_Source\PSoC5/Global_Timer.c **** 
 366:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_WriteControlRegister
 368:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Global_Timer.c **** *
 370:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 371:Generated_Source\PSoC5/Global_Timer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Global_Timer.c **** *
 373:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 374:Generated_Source\PSoC5/Global_Timer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Global_Timer.c **** *
 376:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 377:Generated_Source\PSoC5/Global_Timer.c **** *
 378:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 10


 379:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Global_Timer.c **** {
 381:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL = control;
 383:Generated_Source\PSoC5/Global_Timer.c ****     #else
 384:Generated_Source\PSoC5/Global_Timer.c ****         control = 0u;
 385:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* (!Global_Timer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Global_Timer.c **** }
 387:Generated_Source\PSoC5/Global_Timer.c **** 
 388:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Global_Timer.c **** 
 390:Generated_Source\PSoC5/Global_Timer.c **** 
 391:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadPeriod
 393:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Global_Timer.c **** *
 395:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 396:Generated_Source\PSoC5/Global_Timer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Global_Timer.c **** *
 398:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 399:Generated_Source\PSoC5/Global_Timer.c **** *  void
 400:Generated_Source\PSoC5/Global_Timer.c **** *
 401:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 402:Generated_Source\PSoC5/Global_Timer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Global_Timer.c **** *
 404:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Global_Timer.c **** uint32 Global_Timer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Global_Timer.c **** {
 136              		.loc 1 406 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Global_Timer.c ****    #if(Global_Timer_UsingFixedFunction)
 408:Generated_Source\PSoC5/Global_Timer.c ****        return ((uint32)CY_GET_REG16(Global_Timer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Global_Timer.c ****    #else
 410:Generated_Source\PSoC5/Global_Timer.c ****        return (CY_GET_REG32(Global_Timer_PERIOD_LSB_PTR));
 141              		.loc 1 410 0
 142 0000 014B     		ldr	r3, .L13
 143 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/Global_Timer.c ****    #endif /* (Global_Timer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Global_Timer.c **** }
 144              		.loc 1 412 0
 145 0004 7047     		bx	lr
 146              	.L14:
 147 0006 00BF     		.align	2
 148              	.L13:
 149 0008 24640040 		.word	1073767460
 150              		.cfi_endproc
 151              	.LFE7:
 152              		.size	Global_Timer_ReadPeriod, .-Global_Timer_ReadPeriod
 153              		.section	.text.Global_Timer_WritePeriod,"ax",%progbits
 154              		.align	2
 155              		.global	Global_Timer_WritePeriod
 156              		.thumb
 157              		.thumb_func
 158              		.type	Global_Timer_WritePeriod, %function
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 11


 159              	Global_Timer_WritePeriod:
 160              	.LFB8:
 413:Generated_Source\PSoC5/Global_Timer.c **** 
 414:Generated_Source\PSoC5/Global_Timer.c **** 
 415:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_WritePeriod
 417:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Global_Timer.c **** *
 419:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 420:Generated_Source\PSoC5/Global_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Global_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Global_Timer.c **** *
 423:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 424:Generated_Source\PSoC5/Global_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Global_Timer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Global_Timer.c **** *
 427:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 428:Generated_Source\PSoC5/Global_Timer.c **** *  void
 429:Generated_Source\PSoC5/Global_Timer.c **** *
 430:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/Global_Timer.c **** {
 161              		.loc 1 432 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL1:
 433:Generated_Source\PSoC5/Global_Timer.c ****     #if(Global_Timer_UsingFixedFunction)
 434:Generated_Source\PSoC5/Global_Timer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Global_Timer.c ****         CY_SET_REG16(Global_Timer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Global_Timer.c ****     #else
 437:Generated_Source\PSoC5/Global_Timer.c ****         CY_SET_REG32(Global_Timer_PERIOD_LSB_PTR, period);
 167              		.loc 1 437 0
 168 0000 014B     		ldr	r3, .L16
 169 0002 1860     		str	r0, [r3]
 170 0004 7047     		bx	lr
 171              	.L17:
 172 0006 00BF     		.align	2
 173              	.L16:
 174 0008 24640040 		.word	1073767460
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	Global_Timer_WritePeriod, .-Global_Timer_WritePeriod
 178              		.section	.text.Global_Timer_ReadCapture,"ax",%progbits
 179              		.align	2
 180              		.global	Global_Timer_ReadCapture
 181              		.thumb
 182              		.thumb_func
 183              		.type	Global_Timer_ReadCapture, %function
 184              	Global_Timer_ReadCapture:
 185              	.LFB9:
 438:Generated_Source\PSoC5/Global_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Global_Timer.c **** }
 440:Generated_Source\PSoC5/Global_Timer.c **** 
 441:Generated_Source\PSoC5/Global_Timer.c **** 
 442:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 12


 443:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadCapture
 444:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Global_Timer.c **** *
 446:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 447:Generated_Source\PSoC5/Global_Timer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Global_Timer.c **** *
 449:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 450:Generated_Source\PSoC5/Global_Timer.c **** *  void
 451:Generated_Source\PSoC5/Global_Timer.c **** *
 452:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 453:Generated_Source\PSoC5/Global_Timer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Global_Timer.c **** *
 455:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Global_Timer.c **** uint32 Global_Timer_ReadCapture(void) 
 457:Generated_Source\PSoC5/Global_Timer.c **** {
 186              		.loc 1 457 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Global_Timer.c ****    #if(Global_Timer_UsingFixedFunction)
 459:Generated_Source\PSoC5/Global_Timer.c ****        return ((uint32)CY_GET_REG16(Global_Timer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Global_Timer.c ****    #else
 461:Generated_Source\PSoC5/Global_Timer.c ****        return (CY_GET_REG32(Global_Timer_CAPTURE_LSB_PTR));
 191              		.loc 1 461 0
 192 0000 014B     		ldr	r3, .L19
 193 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/Global_Timer.c ****    #endif /* (Global_Timer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Global_Timer.c **** }
 194              		.loc 1 463 0
 195 0004 7047     		bx	lr
 196              	.L20:
 197 0006 00BF     		.align	2
 198              	.L19:
 199 0008 44640040 		.word	1073767492
 200              		.cfi_endproc
 201              	.LFE9:
 202              		.size	Global_Timer_ReadCapture, .-Global_Timer_ReadCapture
 203              		.section	.text.Global_Timer_WriteCounter,"ax",%progbits
 204              		.align	2
 205              		.global	Global_Timer_WriteCounter
 206              		.thumb
 207              		.thumb_func
 208              		.type	Global_Timer_WriteCounter, %function
 209              	Global_Timer_WriteCounter:
 210              	.LFB10:
 464:Generated_Source\PSoC5/Global_Timer.c **** 
 465:Generated_Source\PSoC5/Global_Timer.c **** 
 466:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_WriteCounter
 468:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Global_Timer.c **** *
 470:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 471:Generated_Source\PSoC5/Global_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Global_Timer.c **** *
 473:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 474:Generated_Source\PSoC5/Global_Timer.c **** *  counter:  New counter value.
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 13


 475:Generated_Source\PSoC5/Global_Timer.c **** *
 476:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 477:Generated_Source\PSoC5/Global_Timer.c **** *  void
 478:Generated_Source\PSoC5/Global_Timer.c **** *
 479:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/Global_Timer.c **** {
 211              		.loc 1 481 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL2:
 482:Generated_Source\PSoC5/Global_Timer.c ****    #if(Global_Timer_UsingFixedFunction)
 483:Generated_Source\PSoC5/Global_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Global_Timer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Global_Timer.c ****          */
 486:Generated_Source\PSoC5/Global_Timer.c ****         CY_SET_REG16(Global_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Global_Timer.c ****         
 488:Generated_Source\PSoC5/Global_Timer.c ****     #else
 489:Generated_Source\PSoC5/Global_Timer.c ****         CY_SET_REG32(Global_Timer_COUNTER_LSB_PTR, counter);
 217              		.loc 1 489 0
 218 0000 014B     		ldr	r3, .L22
 219 0002 1860     		str	r0, [r3]
 220 0004 7047     		bx	lr
 221              	.L23:
 222 0006 00BF     		.align	2
 223              	.L22:
 224 0008 04640040 		.word	1073767428
 225              		.cfi_endproc
 226              	.LFE10:
 227              		.size	Global_Timer_WriteCounter, .-Global_Timer_WriteCounter
 228              		.section	.text.Global_Timer_ReadCounter,"ax",%progbits
 229              		.align	2
 230              		.global	Global_Timer_ReadCounter
 231              		.thumb
 232              		.thumb_func
 233              		.type	Global_Timer_ReadCounter, %function
 234              	Global_Timer_ReadCounter:
 235              	.LFB11:
 490:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Global_Timer.c **** }
 492:Generated_Source\PSoC5/Global_Timer.c **** 
 493:Generated_Source\PSoC5/Global_Timer.c **** 
 494:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadCounter
 496:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Global_Timer.c **** *
 498:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 499:Generated_Source\PSoC5/Global_Timer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Global_Timer.c **** *
 501:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 502:Generated_Source\PSoC5/Global_Timer.c **** *  void
 503:Generated_Source\PSoC5/Global_Timer.c **** *
 504:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 505:Generated_Source\PSoC5/Global_Timer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Global_Timer.c **** *
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 14


 507:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Global_Timer.c **** uint32 Global_Timer_ReadCounter(void) 
 509:Generated_Source\PSoC5/Global_Timer.c **** {
 236              		.loc 1 509 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Global_Timer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Global_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Global_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Global_Timer.c ****     #if(Global_Timer_UsingFixedFunction)
 514:Generated_Source\PSoC5/Global_Timer.c ****         (void)CY_GET_REG16(Global_Timer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Global_Timer.c ****     #else
 516:Generated_Source\PSoC5/Global_Timer.c ****         (void)CY_GET_REG8(Global_Timer_COUNTER_LSB_PTR_8BIT);
 241              		.loc 1 516 0
 242 0000 024B     		ldr	r3, .L25
 243 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Global_Timer.c ****     #endif/* (Global_Timer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Global_Timer.c **** 
 519:Generated_Source\PSoC5/Global_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Global_Timer.c ****     #if(Global_Timer_UsingFixedFunction)
 521:Generated_Source\PSoC5/Global_Timer.c ****         return ((uint32)CY_GET_REG16(Global_Timer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Global_Timer.c ****     #else
 523:Generated_Source\PSoC5/Global_Timer.c ****         return (CY_GET_REG32(Global_Timer_CAPTURE_LSB_PTR));
 244              		.loc 1 523 0
 245 0004 024B     		ldr	r3, .L25+4
 246 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* (Global_Timer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Global_Timer.c **** }
 247              		.loc 1 525 0
 248 0008 7047     		bx	lr
 249              	.L26:
 250 000a 00BF     		.align	2
 251              	.L25:
 252 000c 04640040 		.word	1073767428
 253 0010 44640040 		.word	1073767492
 254              		.cfi_endproc
 255              	.LFE11:
 256              		.size	Global_Timer_ReadCounter, .-Global_Timer_ReadCounter
 257              		.section	.text.Global_Timer_ClearFIFO,"ax",%progbits
 258              		.align	2
 259              		.global	Global_Timer_ClearFIFO
 260              		.thumb
 261              		.thumb_func
 262              		.type	Global_Timer_ClearFIFO, %function
 263              	Global_Timer_ClearFIFO:
 264              	.LFB12:
 526:Generated_Source\PSoC5/Global_Timer.c **** 
 527:Generated_Source\PSoC5/Global_Timer.c **** 
 528:Generated_Source\PSoC5/Global_Timer.c **** #if(!Global_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Global_Timer.c **** 
 530:Generated_Source\PSoC5/Global_Timer.c ****     
 531:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Global_Timer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Global_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Global_Timer.c ****  ******************************************************************************/
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 15


 535:Generated_Source\PSoC5/Global_Timer.c **** 
 536:Generated_Source\PSoC5/Global_Timer.c **** 
 537:Generated_Source\PSoC5/Global_Timer.c **** #if (Global_Timer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Global_Timer.c **** 
 539:Generated_Source\PSoC5/Global_Timer.c **** 
 540:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SetCaptureMode
 542:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Global_Timer.c **** *
 544:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 545:Generated_Source\PSoC5/Global_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Global_Timer.c **** *
 547:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 548:Generated_Source\PSoC5/Global_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Global_Timer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Global_Timer.c **** *  #define Global_Timer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Global_Timer.c **** #define Global_Timer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Global_Timer.c **** #define Global_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Global_Timer.c **** #define Global_Timer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Global_Timer.c **** #define Global_Timer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Global_Timer.c ****  identifiers
 556:Generated_Source\PSoC5/Global_Timer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Global_Timer.c **** *  Global_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Global_Timer.c **** *  Global_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Global_Timer.c **** *  Global_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Global_Timer.c **** *  Global_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Global_Timer.c **** *
 562:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 563:Generated_Source\PSoC5/Global_Timer.c **** *  void
 564:Generated_Source\PSoC5/Global_Timer.c **** *
 565:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Global_Timer.c **** {
 568:Generated_Source\PSoC5/Global_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Global_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Global_Timer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Global_Timer.c ****     captureMode &= (Global_Timer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Global_Timer.c **** 
 572:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= ((uint8)(~Global_Timer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Global_Timer.c **** 
 576:Generated_Source\PSoC5/Global_Timer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* (!Global_Timer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Global_Timer.c **** }
 580:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Global_Timer.c **** 
 582:Generated_Source\PSoC5/Global_Timer.c **** 
 583:Generated_Source\PSoC5/Global_Timer.c **** #if (Global_Timer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Global_Timer.c **** 
 585:Generated_Source\PSoC5/Global_Timer.c **** 
 586:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SetTriggerMode
 588:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Global_Timer.c **** *
 590:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 591:Generated_Source\PSoC5/Global_Timer.c **** *  This function sets the trigger input mode
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 16


 592:Generated_Source\PSoC5/Global_Timer.c **** *
 593:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 594:Generated_Source\PSoC5/Global_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Global_Timer.c ****     #define Global_Timer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Global_Timer.c ****     #define Global_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Global_Timer.c ****     #define Global_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Global_Timer.c ****     #define Global_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Global_Timer.c ****     #define Global_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Global_Timer.c **** *
 601:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 602:Generated_Source\PSoC5/Global_Timer.c **** *  void
 603:Generated_Source\PSoC5/Global_Timer.c **** *
 604:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Global_Timer.c **** {
 607:Generated_Source\PSoC5/Global_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Global_Timer.c ****     triggerMode &= Global_Timer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Global_Timer.c **** 
 610:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remov
 611:Generated_Source\PSoC5/Global_Timer.c ****     
 612:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= ((uint8)(~Global_Timer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Global_Timer.c **** 
 615:Generated_Source\PSoC5/Global_Timer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL |= (triggerMode | Global_Timer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Global_Timer.c **** }
 619:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Global_Timer.c **** 
 621:Generated_Source\PSoC5/Global_Timer.c **** #if (Global_Timer_EnableTriggerMode)
 622:Generated_Source\PSoC5/Global_Timer.c **** 
 623:Generated_Source\PSoC5/Global_Timer.c **** 
 624:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_EnableTrigger
 626:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Global_Timer.c **** *
 628:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 629:Generated_Source\PSoC5/Global_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Global_Timer.c **** *
 631:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 632:Generated_Source\PSoC5/Global_Timer.c **** *  void
 633:Generated_Source\PSoC5/Global_Timer.c **** *
 634:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 635:Generated_Source\PSoC5/Global_Timer.c **** *  void
 636:Generated_Source\PSoC5/Global_Timer.c **** *
 637:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Global_Timer.c **** {
 640:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remov
 641:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL |= Global_Timer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Global_Timer.c **** }
 644:Generated_Source\PSoC5/Global_Timer.c **** 
 645:Generated_Source\PSoC5/Global_Timer.c **** 
 646:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_DisableTrigger
 648:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 17


 649:Generated_Source\PSoC5/Global_Timer.c **** *
 650:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 651:Generated_Source\PSoC5/Global_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Global_Timer.c **** *
 653:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 654:Generated_Source\PSoC5/Global_Timer.c **** *  void
 655:Generated_Source\PSoC5/Global_Timer.c **** *
 656:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 657:Generated_Source\PSoC5/Global_Timer.c **** *  void
 658:Generated_Source\PSoC5/Global_Timer.c **** *
 659:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Global_Timer.c **** {
 662:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remo
 663:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= ((uint8)(~Global_Timer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Global_Timer.c **** }
 666:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Global_Timer.c **** 
 668:Generated_Source\PSoC5/Global_Timer.c **** #if(Global_Timer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Global_Timer.c **** 
 670:Generated_Source\PSoC5/Global_Timer.c **** 
 671:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SetInterruptCount
 673:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Global_Timer.c **** *
 675:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 676:Generated_Source\PSoC5/Global_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Global_Timer.c **** *
 678:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 679:Generated_Source\PSoC5/Global_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Global_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Global_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Global_Timer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Global_Timer.c **** *
 684:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 685:Generated_Source\PSoC5/Global_Timer.c **** *  void
 686:Generated_Source\PSoC5/Global_Timer.c **** *
 687:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Global_Timer.c **** {
 690:Generated_Source\PSoC5/Global_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Global_Timer.c ****     interruptCount &= Global_Timer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Global_Timer.c **** 
 693:Generated_Source\PSoC5/Global_Timer.c ****     #if (!Global_Timer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Global_Timer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL &= ((uint8)(~Global_Timer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Global_Timer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Global_Timer.c ****         Global_Timer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* (!Global_Timer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Global_Timer.c **** }
 700:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Global_Timer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Global_Timer.c **** 
 702:Generated_Source\PSoC5/Global_Timer.c **** 
 703:Generated_Source\PSoC5/Global_Timer.c **** #if (Global_Timer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Global_Timer.c **** 
 705:Generated_Source\PSoC5/Global_Timer.c **** 
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 18


 706:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_SetCaptureCount
 708:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Global_Timer.c **** *
 710:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 711:Generated_Source\PSoC5/Global_Timer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Global_Timer.c **** *
 713:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 714:Generated_Source\PSoC5/Global_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Global_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Global_Timer.c **** *                captures.
 717:Generated_Source\PSoC5/Global_Timer.c **** *
 718:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 719:Generated_Source\PSoC5/Global_Timer.c **** *  void
 720:Generated_Source\PSoC5/Global_Timer.c **** *
 721:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Global_Timer.c **** {
 724:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Global_Timer.c **** }
 726:Generated_Source\PSoC5/Global_Timer.c **** 
 727:Generated_Source\PSoC5/Global_Timer.c **** 
 728:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ReadCaptureCount
 730:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Global_Timer.c **** *
 732:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 733:Generated_Source\PSoC5/Global_Timer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Global_Timer.c **** *
 735:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 736:Generated_Source\PSoC5/Global_Timer.c **** *  void
 737:Generated_Source\PSoC5/Global_Timer.c **** *
 738:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 739:Generated_Source\PSoC5/Global_Timer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Global_Timer.c **** *
 741:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Global_Timer.c **** uint8 Global_Timer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Global_Timer.c **** {
 744:Generated_Source\PSoC5/Global_Timer.c ****     return ((uint8)Global_Timer_CAP_COUNT);
 745:Generated_Source\PSoC5/Global_Timer.c **** }
 746:Generated_Source\PSoC5/Global_Timer.c **** #endif /* Global_Timer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Global_Timer.c **** 
 748:Generated_Source\PSoC5/Global_Timer.c **** 
 749:Generated_Source\PSoC5/Global_Timer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Global_Timer.c **** * Function Name: Global_Timer_ClearFIFO
 751:Generated_Source\PSoC5/Global_Timer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Global_Timer.c **** *
 753:Generated_Source\PSoC5/Global_Timer.c **** * Summary:
 754:Generated_Source\PSoC5/Global_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Global_Timer.c **** *
 756:Generated_Source\PSoC5/Global_Timer.c **** * Parameters:
 757:Generated_Source\PSoC5/Global_Timer.c **** *  void
 758:Generated_Source\PSoC5/Global_Timer.c **** *
 759:Generated_Source\PSoC5/Global_Timer.c **** * Return:
 760:Generated_Source\PSoC5/Global_Timer.c **** *  void
 761:Generated_Source\PSoC5/Global_Timer.c **** *
 762:Generated_Source\PSoC5/Global_Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 19


 763:Generated_Source\PSoC5/Global_Timer.c **** void Global_Timer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Global_Timer.c **** {
 265              		.loc 1 764 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Global_Timer.c ****     while(0u != (Global_Timer_ReadStatusRegister() & Global_Timer_STATUS_FIFONEMP))
 273              		.loc 1 765 0
 274 0002 01E0     		b	.L28
 275              	.L29:
 766:Generated_Source\PSoC5/Global_Timer.c ****     {
 767:Generated_Source\PSoC5/Global_Timer.c ****         (void)Global_Timer_ReadCapture();
 276              		.loc 1 767 0
 277 0004 FFF7FEFF 		bl	Global_Timer_ReadCapture
 278              	.LVL3:
 279              	.L28:
 765:Generated_Source\PSoC5/Global_Timer.c ****     while(0u != (Global_Timer_ReadStatusRegister() & Global_Timer_STATUS_FIFONEMP))
 280              		.loc 1 765 0
 281 0008 FFF7FEFF 		bl	Global_Timer_ReadStatusRegister
 282              	.LVL4:
 283 000c 10F0080F 		tst	r0, #8
 284 0010 F8D1     		bne	.L29
 768:Generated_Source\PSoC5/Global_Timer.c ****     }
 769:Generated_Source\PSoC5/Global_Timer.c **** }
 285              		.loc 1 769 0
 286 0012 08BD     		pop	{r3, pc}
 287              		.cfi_endproc
 288              	.LFE12:
 289              		.size	Global_Timer_ClearFIFO, .-Global_Timer_ClearFIFO
 290              		.section	.text.Global_Timer_Init,"ax",%progbits
 291              		.align	2
 292              		.global	Global_Timer_Init
 293              		.thumb
 294              		.thumb_func
 295              		.type	Global_Timer_Init, %function
 296              	Global_Timer_Init:
 297              	.LFB0:
  44:Generated_Source\PSoC5/Global_Timer.c ****     #if(!Global_Timer_UsingFixedFunction)
 298              		.loc 1 44 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Global_Timer.c ****     Global_Timer_WriteCounter(Global_Timer_INIT_PERIOD);
 306              		.loc 1 118 0
 307 0002 4FF0FF30 		mov	r0, #-1
 308 0006 FFF7FEFF 		bl	Global_Timer_WritePeriod
 309              	.LVL5:
 119:Generated_Source\PSoC5/Global_Timer.c **** 
 310              		.loc 1 119 0
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 20


 311 000a 4FF0FF30 		mov	r0, #-1
 312 000e FFF7FEFF 		bl	Global_Timer_WriteCounter
 313              	.LVL6:
 142:Generated_Source\PSoC5/Global_Timer.c **** 
 314              		.loc 1 142 0
 315 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 316              	.LVL7:
 145:Generated_Source\PSoC5/Global_Timer.c **** 
 317              		.loc 1 145 0
 318 0016 064A     		ldr	r2, .L33
 319 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 320 001a 43F01003 		orr	r3, r3, #16
 321 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Global_Timer.c **** 
 322              		.loc 1 148 0
 323 0020 FFF7FEFF 		bl	CyExitCriticalSection
 324              	.LVL8:
 159:Generated_Source\PSoC5/Global_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 325              		.loc 1 159 0
 326 0024 FFF7FEFF 		bl	Global_Timer_ClearFIFO
 327              	.LVL9:
 162:Generated_Source\PSoC5/Global_Timer.c **** }
 328              		.loc 1 162 0
 329 0028 0020     		movs	r0, #0
 330 002a FFF7FEFF 		bl	Global_Timer_SetInterruptMode
 331              	.LVL10:
 332 002e 08BD     		pop	{r3, pc}
 333              	.L34:
 334              		.align	2
 335              	.L33:
 336 0030 94640040 		.word	1073767572
 337              		.cfi_endproc
 338              	.LFE0:
 339              		.size	Global_Timer_Init, .-Global_Timer_Init
 340              		.section	.text.Global_Timer_Start,"ax",%progbits
 341              		.align	2
 342              		.global	Global_Timer_Start
 343              		.thumb
 344              		.thumb_func
 345              		.type	Global_Timer_Start, %function
 346              	Global_Timer_Start:
 347              	.LFB2:
 216:Generated_Source\PSoC5/Global_Timer.c ****     if(Global_Timer_initVar == 0u)
 348              		.loc 1 216 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Global_Timer.c ****     {
 356              		.loc 1 217 0
 357 0002 044B     		ldr	r3, .L38
 358 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359 0006 23B9     		cbnz	r3, .L35
 219:Generated_Source\PSoC5/Global_Timer.c **** 
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 21


 360              		.loc 1 219 0
 361 0008 FFF7FEFF 		bl	Global_Timer_Init
 362              	.LVL11:
 221:Generated_Source\PSoC5/Global_Timer.c ****     }
 363              		.loc 1 221 0
 364 000c 0122     		movs	r2, #1
 365 000e 014B     		ldr	r3, .L38
 366 0010 1A70     		strb	r2, [r3]
 367              	.L35:
 368 0012 08BD     		pop	{r3, pc}
 369              	.L39:
 370              		.align	2
 371              	.L38:
 372 0014 00000000 		.word	.LANCHOR0
 373              		.cfi_endproc
 374              	.LFE2:
 375              		.size	Global_Timer_Start, .-Global_Timer_Start
 376              		.global	Global_Timer_initVar
 377              		.bss
 378              		.set	.LANCHOR0,. + 0
 379              		.type	Global_Timer_initVar, %object
 380              		.size	Global_Timer_initVar, 1
 381              	Global_Timer_initVar:
 382 0000 00       		.space	1
 383              		.text
 384              	.Letext0:
 385              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 386              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 387              		.section	.debug_info,"",%progbits
 388              	.Ldebug_info0:
 389 0000 A6020000 		.4byte	0x2a6
 390 0004 0400     		.2byte	0x4
 391 0006 00000000 		.4byte	.Ldebug_abbrev0
 392 000a 04       		.byte	0x4
 393 000b 01       		.uleb128 0x1
 394 000c C9000000 		.4byte	.LASF36
 395 0010 0C       		.byte	0xc
 396 0011 52030000 		.4byte	.LASF37
 397 0015 06030000 		.4byte	.LASF38
 398 0019 00000000 		.4byte	.Ldebug_ranges0+0
 399 001d 00000000 		.4byte	0
 400 0021 00000000 		.4byte	.Ldebug_line0
 401 0025 02       		.uleb128 0x2
 402 0026 01       		.byte	0x1
 403 0027 06       		.byte	0x6
 404 0028 DD020000 		.4byte	.LASF0
 405 002c 02       		.uleb128 0x2
 406 002d 01       		.byte	0x1
 407 002e 08       		.byte	0x8
 408 002f BB000000 		.4byte	.LASF1
 409 0033 02       		.uleb128 0x2
 410 0034 02       		.byte	0x2
 411 0035 05       		.byte	0x5
 412 0036 A7020000 		.4byte	.LASF2
 413 003a 02       		.uleb128 0x2
 414 003b 02       		.byte	0x2
 415 003c 07       		.byte	0x7
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 22


 416 003d 71000000 		.4byte	.LASF3
 417 0041 02       		.uleb128 0x2
 418 0042 04       		.byte	0x4
 419 0043 05       		.byte	0x5
 420 0044 C3020000 		.4byte	.LASF4
 421 0048 02       		.uleb128 0x2
 422 0049 04       		.byte	0x4
 423 004a 07       		.byte	0x7
 424 004b 5C010000 		.4byte	.LASF5
 425 004f 02       		.uleb128 0x2
 426 0050 08       		.byte	0x8
 427 0051 05       		.byte	0x5
 428 0052 72020000 		.4byte	.LASF6
 429 0056 02       		.uleb128 0x2
 430 0057 08       		.byte	0x8
 431 0058 07       		.byte	0x7
 432 0059 A4000000 		.4byte	.LASF7
 433 005d 03       		.uleb128 0x3
 434 005e 04       		.byte	0x4
 435 005f 05       		.byte	0x5
 436 0060 696E7400 		.ascii	"int\000"
 437 0064 02       		.uleb128 0x2
 438 0065 04       		.byte	0x4
 439 0066 07       		.byte	0x7
 440 0067 AE010000 		.4byte	.LASF8
 441 006b 04       		.uleb128 0x4
 442 006c 6E010000 		.4byte	.LASF9
 443 0070 02       		.byte	0x2
 444 0071 E401     		.2byte	0x1e4
 445 0073 2C000000 		.4byte	0x2c
 446 0077 04       		.uleb128 0x4
 447 0078 90010000 		.4byte	.LASF10
 448 007c 02       		.byte	0x2
 449 007d E601     		.2byte	0x1e6
 450 007f 48000000 		.4byte	0x48
 451 0083 02       		.uleb128 0x2
 452 0084 04       		.byte	0x4
 453 0085 04       		.byte	0x4
 454 0086 96000000 		.4byte	.LASF11
 455 008a 02       		.uleb128 0x2
 456 008b 08       		.byte	0x8
 457 008c 04       		.byte	0x4
 458 008d 89010000 		.4byte	.LASF12
 459 0091 02       		.uleb128 0x2
 460 0092 01       		.byte	0x1
 461 0093 08       		.byte	0x8
 462 0094 CC020000 		.4byte	.LASF13
 463 0098 04       		.uleb128 0x4
 464 0099 57010000 		.4byte	.LASF14
 465 009d 02       		.byte	0x2
 466 009e 8E02     		.2byte	0x28e
 467 00a0 A4000000 		.4byte	0xa4
 468 00a4 05       		.uleb128 0x5
 469 00a5 6B000000 		.4byte	0x6b
 470 00a9 04       		.uleb128 0x4
 471 00aa 00000000 		.4byte	.LASF15
 472 00ae 02       		.byte	0x2
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 23


 473 00af 9002     		.2byte	0x290
 474 00b1 B5000000 		.4byte	0xb5
 475 00b5 05       		.uleb128 0x5
 476 00b6 77000000 		.4byte	0x77
 477 00ba 02       		.uleb128 0x2
 478 00bb 08       		.byte	0x8
 479 00bc 04       		.byte	0x4
 480 00bd D1020000 		.4byte	.LASF16
 481 00c1 02       		.uleb128 0x2
 482 00c2 04       		.byte	0x4
 483 00c3 07       		.byte	0x7
 484 00c4 69020000 		.4byte	.LASF17
 485 00c8 06       		.uleb128 0x6
 486 00c9 55020000 		.4byte	.LASF18
 487 00cd 01       		.byte	0x1
 488 00ce B4       		.byte	0xb4
 489 00cf 00000000 		.4byte	.LFB1
 490 00d3 02000000 		.4byte	.LFE1-.LFB1
 491 00d7 01       		.uleb128 0x1
 492 00d8 9C       		.byte	0x9c
 493 00d9 06       		.uleb128 0x6
 494 00da B1020000 		.4byte	.LASF19
 495 00de 01       		.byte	0x1
 496 00df F7       		.byte	0xf7
 497 00e0 00000000 		.4byte	.LFB3
 498 00e4 02000000 		.4byte	.LFE3-.LFB3
 499 00e8 01       		.uleb128 0x1
 500 00e9 9C       		.byte	0x9c
 501 00ea 07       		.uleb128 0x7
 502 00eb 24020000 		.4byte	.LASF23
 503 00ef 01       		.byte	0x1
 504 00f0 1701     		.2byte	0x117
 505 00f2 00000000 		.4byte	.LFB4
 506 00f6 0C000000 		.4byte	.LFE4-.LFB4
 507 00fa 01       		.uleb128 0x1
 508 00fb 9C       		.byte	0x9c
 509 00fc 0F010000 		.4byte	0x10f
 510 0100 08       		.uleb128 0x8
 511 0101 80020000 		.4byte	.LASF25
 512 0105 01       		.byte	0x1
 513 0106 1701     		.2byte	0x117
 514 0108 6B000000 		.4byte	0x6b
 515 010c 01       		.uleb128 0x1
 516 010d 50       		.byte	0x50
 517 010e 00       		.byte	0
 518 010f 09       		.uleb128 0x9
 519 0110 E9020000 		.4byte	.LASF20
 520 0114 01       		.byte	0x1
 521 0115 2E01     		.2byte	0x12e
 522 0117 00000000 		.4byte	.LFB5
 523 011b 0C000000 		.4byte	.LFE5-.LFB5
 524 011f 01       		.uleb128 0x1
 525 0120 9C       		.byte	0x9c
 526 0121 0A       		.uleb128 0xa
 527 0122 D5010000 		.4byte	.LASF21
 528 0126 01       		.byte	0x1
 529 0127 4D01     		.2byte	0x14d
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 24


 530 0129 6B000000 		.4byte	0x6b
 531 012d 00000000 		.4byte	.LFB6
 532 0131 0C000000 		.4byte	.LFE6-.LFB6
 533 0135 01       		.uleb128 0x1
 534 0136 9C       		.byte	0x9c
 535 0137 0A       		.uleb128 0xa
 536 0138 59000000 		.4byte	.LASF22
 537 013c 01       		.byte	0x1
 538 013d 9501     		.2byte	0x195
 539 013f 77000000 		.4byte	0x77
 540 0143 00000000 		.4byte	.LFB7
 541 0147 0C000000 		.4byte	.LFE7-.LFB7
 542 014b 01       		.uleb128 0x1
 543 014c 9C       		.byte	0x9c
 544 014d 07       		.uleb128 0x7
 545 014e 1D000000 		.4byte	.LASF24
 546 0152 01       		.byte	0x1
 547 0153 AF01     		.2byte	0x1af
 548 0155 00000000 		.4byte	.LFB8
 549 0159 0C000000 		.4byte	.LFE8-.LFB8
 550 015d 01       		.uleb128 0x1
 551 015e 9C       		.byte	0x9c
 552 015f 72010000 		.4byte	0x172
 553 0163 08       		.uleb128 0x8
 554 0164 36000000 		.4byte	.LASF26
 555 0168 01       		.byte	0x1
 556 0169 AF01     		.2byte	0x1af
 557 016b 77000000 		.4byte	0x77
 558 016f 01       		.uleb128 0x1
 559 0170 50       		.byte	0x50
 560 0171 00       		.byte	0
 561 0172 0A       		.uleb128 0xa
 562 0173 0B020000 		.4byte	.LASF27
 563 0177 01       		.byte	0x1
 564 0178 C801     		.2byte	0x1c8
 565 017a 77000000 		.4byte	0x77
 566 017e 00000000 		.4byte	.LFB9
 567 0182 0C000000 		.4byte	.LFE9-.LFB9
 568 0186 01       		.uleb128 0x1
 569 0187 9C       		.byte	0x9c
 570 0188 07       		.uleb128 0x7
 571 0189 BB010000 		.4byte	.LASF28
 572 018d 01       		.byte	0x1
 573 018e E001     		.2byte	0x1e0
 574 0190 00000000 		.4byte	.LFB10
 575 0194 0C000000 		.4byte	.LFE10-.LFB10
 576 0198 01       		.uleb128 0x1
 577 0199 9C       		.byte	0x9c
 578 019a AD010000 		.4byte	0x1ad
 579 019e 08       		.uleb128 0x8
 580 019f 9C000000 		.4byte	.LASF29
 581 01a3 01       		.byte	0x1
 582 01a4 E001     		.2byte	0x1e0
 583 01a6 77000000 		.4byte	0x77
 584 01aa 01       		.uleb128 0x1
 585 01ab 50       		.byte	0x50
 586 01ac 00       		.byte	0
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 25


 587 01ad 0A       		.uleb128 0xa
 588 01ae 8E020000 		.4byte	.LASF30
 589 01b2 01       		.byte	0x1
 590 01b3 FC01     		.2byte	0x1fc
 591 01b5 77000000 		.4byte	0x77
 592 01b9 00000000 		.4byte	.LFB11
 593 01bd 14000000 		.4byte	.LFE11-.LFB11
 594 01c1 01       		.uleb128 0x1
 595 01c2 9C       		.byte	0x9c
 596 01c3 07       		.uleb128 0x7
 597 01c4 06000000 		.4byte	.LASF31
 598 01c8 01       		.byte	0x1
 599 01c9 FB02     		.2byte	0x2fb
 600 01cb 00000000 		.4byte	.LFB12
 601 01cf 14000000 		.4byte	.LFE12-.LFB12
 602 01d3 01       		.uleb128 0x1
 603 01d4 9C       		.byte	0x9c
 604 01d5 EC010000 		.4byte	0x1ec
 605 01d9 0B       		.uleb128 0xb
 606 01da 08000000 		.4byte	.LVL3
 607 01de 72010000 		.4byte	0x172
 608 01e2 0B       		.uleb128 0xb
 609 01e3 0C000000 		.4byte	.LVL4
 610 01e7 21010000 		.4byte	0x121
 611 01eb 00       		.byte	0
 612 01ec 0C       		.uleb128 0xc
 613 01ed 84000000 		.4byte	.LASF32
 614 01f1 01       		.byte	0x1
 615 01f2 2B       		.byte	0x2b
 616 01f3 00000000 		.4byte	.LFB0
 617 01f7 34000000 		.4byte	.LFE0-.LFB0
 618 01fb 01       		.uleb128 0x1
 619 01fc 9C       		.byte	0x9c
 620 01fd 63020000 		.4byte	0x263
 621 0201 0D       		.uleb128 0xd
 622 0202 3D000000 		.4byte	.LASF39
 623 0206 01       		.byte	0x1
 624 0207 2F       		.byte	0x2f
 625 0208 6B000000 		.4byte	0x6b
 626 020c 00000000 		.4byte	.LLST0
 627 0210 0E       		.uleb128 0xe
 628 0211 0A000000 		.4byte	.LVL5
 629 0215 4D010000 		.4byte	0x14d
 630 0219 24020000 		.4byte	0x224
 631 021d 0F       		.uleb128 0xf
 632 021e 01       		.uleb128 0x1
 633 021f 50       		.byte	0x50
 634 0220 02       		.uleb128 0x2
 635 0221 09       		.byte	0x9
 636 0222 FF       		.byte	0xff
 637 0223 00       		.byte	0
 638 0224 0E       		.uleb128 0xe
 639 0225 12000000 		.4byte	.LVL6
 640 0229 88010000 		.4byte	0x188
 641 022d 38020000 		.4byte	0x238
 642 0231 0F       		.uleb128 0xf
 643 0232 01       		.uleb128 0x1
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 26


 644 0233 50       		.byte	0x50
 645 0234 02       		.uleb128 0x2
 646 0235 09       		.byte	0x9
 647 0236 FF       		.byte	0xff
 648 0237 00       		.byte	0
 649 0238 0B       		.uleb128 0xb
 650 0239 16000000 		.4byte	.LVL7
 651 023d 93020000 		.4byte	0x293
 652 0241 0B       		.uleb128 0xb
 653 0242 24000000 		.4byte	.LVL8
 654 0246 9E020000 		.4byte	0x29e
 655 024a 0B       		.uleb128 0xb
 656 024b 28000000 		.4byte	.LVL9
 657 024f C3010000 		.4byte	0x1c3
 658 0253 10       		.uleb128 0x10
 659 0254 2E000000 		.4byte	.LVL10
 660 0258 EA000000 		.4byte	0xea
 661 025c 0F       		.uleb128 0xf
 662 025d 01       		.uleb128 0x1
 663 025e 50       		.byte	0x50
 664 025f 01       		.uleb128 0x1
 665 0260 30       		.byte	0x30
 666 0261 00       		.byte	0
 667 0262 00       		.byte	0
 668 0263 0C       		.uleb128 0xc
 669 0264 42020000 		.4byte	.LASF33
 670 0268 01       		.byte	0x1
 671 0269 D7       		.byte	0xd7
 672 026a 00000000 		.4byte	.LFB2
 673 026e 18000000 		.4byte	.LFE2-.LFB2
 674 0272 01       		.uleb128 0x1
 675 0273 9C       		.byte	0x9c
 676 0274 82020000 		.4byte	0x282
 677 0278 0B       		.uleb128 0xb
 678 0279 0C000000 		.4byte	.LVL11
 679 027d EC010000 		.4byte	0x1ec
 680 0281 00       		.byte	0
 681 0282 11       		.uleb128 0x11
 682 0283 74010000 		.4byte	.LASF40
 683 0287 01       		.byte	0x1
 684 0288 1A       		.byte	0x1a
 685 0289 6B000000 		.4byte	0x6b
 686 028d 05       		.uleb128 0x5
 687 028e 03       		.byte	0x3
 688 028f 00000000 		.4byte	Global_Timer_initVar
 689 0293 12       		.uleb128 0x12
 690 0294 97010000 		.4byte	.LASF34
 691 0298 97010000 		.4byte	.LASF34
 692 029c 03       		.byte	0x3
 693 029d 7D       		.byte	0x7d
 694 029e 12       		.uleb128 0x12
 695 029f F5010000 		.4byte	.LASF35
 696 02a3 F5010000 		.4byte	.LASF35
 697 02a7 03       		.byte	0x3
 698 02a8 7E       		.byte	0x7e
 699 02a9 00       		.byte	0
 700              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 27


 701              	.Ldebug_abbrev0:
 702 0000 01       		.uleb128 0x1
 703 0001 11       		.uleb128 0x11
 704 0002 01       		.byte	0x1
 705 0003 25       		.uleb128 0x25
 706 0004 0E       		.uleb128 0xe
 707 0005 13       		.uleb128 0x13
 708 0006 0B       		.uleb128 0xb
 709 0007 03       		.uleb128 0x3
 710 0008 0E       		.uleb128 0xe
 711 0009 1B       		.uleb128 0x1b
 712 000a 0E       		.uleb128 0xe
 713 000b 55       		.uleb128 0x55
 714 000c 17       		.uleb128 0x17
 715 000d 11       		.uleb128 0x11
 716 000e 01       		.uleb128 0x1
 717 000f 10       		.uleb128 0x10
 718 0010 17       		.uleb128 0x17
 719 0011 00       		.byte	0
 720 0012 00       		.byte	0
 721 0013 02       		.uleb128 0x2
 722 0014 24       		.uleb128 0x24
 723 0015 00       		.byte	0
 724 0016 0B       		.uleb128 0xb
 725 0017 0B       		.uleb128 0xb
 726 0018 3E       		.uleb128 0x3e
 727 0019 0B       		.uleb128 0xb
 728 001a 03       		.uleb128 0x3
 729 001b 0E       		.uleb128 0xe
 730 001c 00       		.byte	0
 731 001d 00       		.byte	0
 732 001e 03       		.uleb128 0x3
 733 001f 24       		.uleb128 0x24
 734 0020 00       		.byte	0
 735 0021 0B       		.uleb128 0xb
 736 0022 0B       		.uleb128 0xb
 737 0023 3E       		.uleb128 0x3e
 738 0024 0B       		.uleb128 0xb
 739 0025 03       		.uleb128 0x3
 740 0026 08       		.uleb128 0x8
 741 0027 00       		.byte	0
 742 0028 00       		.byte	0
 743 0029 04       		.uleb128 0x4
 744 002a 16       		.uleb128 0x16
 745 002b 00       		.byte	0
 746 002c 03       		.uleb128 0x3
 747 002d 0E       		.uleb128 0xe
 748 002e 3A       		.uleb128 0x3a
 749 002f 0B       		.uleb128 0xb
 750 0030 3B       		.uleb128 0x3b
 751 0031 05       		.uleb128 0x5
 752 0032 49       		.uleb128 0x49
 753 0033 13       		.uleb128 0x13
 754 0034 00       		.byte	0
 755 0035 00       		.byte	0
 756 0036 05       		.uleb128 0x5
 757 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 28


 758 0038 00       		.byte	0
 759 0039 49       		.uleb128 0x49
 760 003a 13       		.uleb128 0x13
 761 003b 00       		.byte	0
 762 003c 00       		.byte	0
 763 003d 06       		.uleb128 0x6
 764 003e 2E       		.uleb128 0x2e
 765 003f 00       		.byte	0
 766 0040 3F       		.uleb128 0x3f
 767 0041 19       		.uleb128 0x19
 768 0042 03       		.uleb128 0x3
 769 0043 0E       		.uleb128 0xe
 770 0044 3A       		.uleb128 0x3a
 771 0045 0B       		.uleb128 0xb
 772 0046 3B       		.uleb128 0x3b
 773 0047 0B       		.uleb128 0xb
 774 0048 27       		.uleb128 0x27
 775 0049 19       		.uleb128 0x19
 776 004a 11       		.uleb128 0x11
 777 004b 01       		.uleb128 0x1
 778 004c 12       		.uleb128 0x12
 779 004d 06       		.uleb128 0x6
 780 004e 40       		.uleb128 0x40
 781 004f 18       		.uleb128 0x18
 782 0050 9742     		.uleb128 0x2117
 783 0052 19       		.uleb128 0x19
 784 0053 00       		.byte	0
 785 0054 00       		.byte	0
 786 0055 07       		.uleb128 0x7
 787 0056 2E       		.uleb128 0x2e
 788 0057 01       		.byte	0x1
 789 0058 3F       		.uleb128 0x3f
 790 0059 19       		.uleb128 0x19
 791 005a 03       		.uleb128 0x3
 792 005b 0E       		.uleb128 0xe
 793 005c 3A       		.uleb128 0x3a
 794 005d 0B       		.uleb128 0xb
 795 005e 3B       		.uleb128 0x3b
 796 005f 05       		.uleb128 0x5
 797 0060 27       		.uleb128 0x27
 798 0061 19       		.uleb128 0x19
 799 0062 11       		.uleb128 0x11
 800 0063 01       		.uleb128 0x1
 801 0064 12       		.uleb128 0x12
 802 0065 06       		.uleb128 0x6
 803 0066 40       		.uleb128 0x40
 804 0067 18       		.uleb128 0x18
 805 0068 9742     		.uleb128 0x2117
 806 006a 19       		.uleb128 0x19
 807 006b 01       		.uleb128 0x1
 808 006c 13       		.uleb128 0x13
 809 006d 00       		.byte	0
 810 006e 00       		.byte	0
 811 006f 08       		.uleb128 0x8
 812 0070 05       		.uleb128 0x5
 813 0071 00       		.byte	0
 814 0072 03       		.uleb128 0x3
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 29


 815 0073 0E       		.uleb128 0xe
 816 0074 3A       		.uleb128 0x3a
 817 0075 0B       		.uleb128 0xb
 818 0076 3B       		.uleb128 0x3b
 819 0077 05       		.uleb128 0x5
 820 0078 49       		.uleb128 0x49
 821 0079 13       		.uleb128 0x13
 822 007a 02       		.uleb128 0x2
 823 007b 18       		.uleb128 0x18
 824 007c 00       		.byte	0
 825 007d 00       		.byte	0
 826 007e 09       		.uleb128 0x9
 827 007f 2E       		.uleb128 0x2e
 828 0080 00       		.byte	0
 829 0081 3F       		.uleb128 0x3f
 830 0082 19       		.uleb128 0x19
 831 0083 03       		.uleb128 0x3
 832 0084 0E       		.uleb128 0xe
 833 0085 3A       		.uleb128 0x3a
 834 0086 0B       		.uleb128 0xb
 835 0087 3B       		.uleb128 0x3b
 836 0088 05       		.uleb128 0x5
 837 0089 27       		.uleb128 0x27
 838 008a 19       		.uleb128 0x19
 839 008b 11       		.uleb128 0x11
 840 008c 01       		.uleb128 0x1
 841 008d 12       		.uleb128 0x12
 842 008e 06       		.uleb128 0x6
 843 008f 40       		.uleb128 0x40
 844 0090 18       		.uleb128 0x18
 845 0091 9742     		.uleb128 0x2117
 846 0093 19       		.uleb128 0x19
 847 0094 00       		.byte	0
 848 0095 00       		.byte	0
 849 0096 0A       		.uleb128 0xa
 850 0097 2E       		.uleb128 0x2e
 851 0098 00       		.byte	0
 852 0099 3F       		.uleb128 0x3f
 853 009a 19       		.uleb128 0x19
 854 009b 03       		.uleb128 0x3
 855 009c 0E       		.uleb128 0xe
 856 009d 3A       		.uleb128 0x3a
 857 009e 0B       		.uleb128 0xb
 858 009f 3B       		.uleb128 0x3b
 859 00a0 05       		.uleb128 0x5
 860 00a1 27       		.uleb128 0x27
 861 00a2 19       		.uleb128 0x19
 862 00a3 49       		.uleb128 0x49
 863 00a4 13       		.uleb128 0x13
 864 00a5 11       		.uleb128 0x11
 865 00a6 01       		.uleb128 0x1
 866 00a7 12       		.uleb128 0x12
 867 00a8 06       		.uleb128 0x6
 868 00a9 40       		.uleb128 0x40
 869 00aa 18       		.uleb128 0x18
 870 00ab 9742     		.uleb128 0x2117
 871 00ad 19       		.uleb128 0x19
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 30


 872 00ae 00       		.byte	0
 873 00af 00       		.byte	0
 874 00b0 0B       		.uleb128 0xb
 875 00b1 898201   		.uleb128 0x4109
 876 00b4 00       		.byte	0
 877 00b5 11       		.uleb128 0x11
 878 00b6 01       		.uleb128 0x1
 879 00b7 31       		.uleb128 0x31
 880 00b8 13       		.uleb128 0x13
 881 00b9 00       		.byte	0
 882 00ba 00       		.byte	0
 883 00bb 0C       		.uleb128 0xc
 884 00bc 2E       		.uleb128 0x2e
 885 00bd 01       		.byte	0x1
 886 00be 3F       		.uleb128 0x3f
 887 00bf 19       		.uleb128 0x19
 888 00c0 03       		.uleb128 0x3
 889 00c1 0E       		.uleb128 0xe
 890 00c2 3A       		.uleb128 0x3a
 891 00c3 0B       		.uleb128 0xb
 892 00c4 3B       		.uleb128 0x3b
 893 00c5 0B       		.uleb128 0xb
 894 00c6 27       		.uleb128 0x27
 895 00c7 19       		.uleb128 0x19
 896 00c8 11       		.uleb128 0x11
 897 00c9 01       		.uleb128 0x1
 898 00ca 12       		.uleb128 0x12
 899 00cb 06       		.uleb128 0x6
 900 00cc 40       		.uleb128 0x40
 901 00cd 18       		.uleb128 0x18
 902 00ce 9742     		.uleb128 0x2117
 903 00d0 19       		.uleb128 0x19
 904 00d1 01       		.uleb128 0x1
 905 00d2 13       		.uleb128 0x13
 906 00d3 00       		.byte	0
 907 00d4 00       		.byte	0
 908 00d5 0D       		.uleb128 0xd
 909 00d6 34       		.uleb128 0x34
 910 00d7 00       		.byte	0
 911 00d8 03       		.uleb128 0x3
 912 00d9 0E       		.uleb128 0xe
 913 00da 3A       		.uleb128 0x3a
 914 00db 0B       		.uleb128 0xb
 915 00dc 3B       		.uleb128 0x3b
 916 00dd 0B       		.uleb128 0xb
 917 00de 49       		.uleb128 0x49
 918 00df 13       		.uleb128 0x13
 919 00e0 02       		.uleb128 0x2
 920 00e1 17       		.uleb128 0x17
 921 00e2 00       		.byte	0
 922 00e3 00       		.byte	0
 923 00e4 0E       		.uleb128 0xe
 924 00e5 898201   		.uleb128 0x4109
 925 00e8 01       		.byte	0x1
 926 00e9 11       		.uleb128 0x11
 927 00ea 01       		.uleb128 0x1
 928 00eb 31       		.uleb128 0x31
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 31


 929 00ec 13       		.uleb128 0x13
 930 00ed 01       		.uleb128 0x1
 931 00ee 13       		.uleb128 0x13
 932 00ef 00       		.byte	0
 933 00f0 00       		.byte	0
 934 00f1 0F       		.uleb128 0xf
 935 00f2 8A8201   		.uleb128 0x410a
 936 00f5 00       		.byte	0
 937 00f6 02       		.uleb128 0x2
 938 00f7 18       		.uleb128 0x18
 939 00f8 9142     		.uleb128 0x2111
 940 00fa 18       		.uleb128 0x18
 941 00fb 00       		.byte	0
 942 00fc 00       		.byte	0
 943 00fd 10       		.uleb128 0x10
 944 00fe 898201   		.uleb128 0x4109
 945 0101 01       		.byte	0x1
 946 0102 11       		.uleb128 0x11
 947 0103 01       		.uleb128 0x1
 948 0104 31       		.uleb128 0x31
 949 0105 13       		.uleb128 0x13
 950 0106 00       		.byte	0
 951 0107 00       		.byte	0
 952 0108 11       		.uleb128 0x11
 953 0109 34       		.uleb128 0x34
 954 010a 00       		.byte	0
 955 010b 03       		.uleb128 0x3
 956 010c 0E       		.uleb128 0xe
 957 010d 3A       		.uleb128 0x3a
 958 010e 0B       		.uleb128 0xb
 959 010f 3B       		.uleb128 0x3b
 960 0110 0B       		.uleb128 0xb
 961 0111 49       		.uleb128 0x49
 962 0112 13       		.uleb128 0x13
 963 0113 3F       		.uleb128 0x3f
 964 0114 19       		.uleb128 0x19
 965 0115 02       		.uleb128 0x2
 966 0116 18       		.uleb128 0x18
 967 0117 00       		.byte	0
 968 0118 00       		.byte	0
 969 0119 12       		.uleb128 0x12
 970 011a 2E       		.uleb128 0x2e
 971 011b 00       		.byte	0
 972 011c 3F       		.uleb128 0x3f
 973 011d 19       		.uleb128 0x19
 974 011e 3C       		.uleb128 0x3c
 975 011f 19       		.uleb128 0x19
 976 0120 6E       		.uleb128 0x6e
 977 0121 0E       		.uleb128 0xe
 978 0122 03       		.uleb128 0x3
 979 0123 0E       		.uleb128 0xe
 980 0124 3A       		.uleb128 0x3a
 981 0125 0B       		.uleb128 0xb
 982 0126 3B       		.uleb128 0x3b
 983 0127 0B       		.uleb128 0xb
 984 0128 00       		.byte	0
 985 0129 00       		.byte	0
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 32


 986 012a 00       		.byte	0
 987              		.section	.debug_loc,"",%progbits
 988              	.Ldebug_loc0:
 989              	.LLST0:
 990 0000 16000000 		.4byte	.LVL7
 991 0004 23000000 		.4byte	.LVL8-1
 992 0008 0100     		.2byte	0x1
 993 000a 50       		.byte	0x50
 994 000b 00000000 		.4byte	0
 995 000f 00000000 		.4byte	0
 996              		.section	.debug_aranges,"",%progbits
 997 0000 7C000000 		.4byte	0x7c
 998 0004 0200     		.2byte	0x2
 999 0006 00000000 		.4byte	.Ldebug_info0
 1000 000a 04       		.byte	0x4
 1001 000b 00       		.byte	0
 1002 000c 0000     		.2byte	0
 1003 000e 0000     		.2byte	0
 1004 0010 00000000 		.4byte	.LFB1
 1005 0014 02000000 		.4byte	.LFE1-.LFB1
 1006 0018 00000000 		.4byte	.LFB3
 1007 001c 02000000 		.4byte	.LFE3-.LFB3
 1008 0020 00000000 		.4byte	.LFB4
 1009 0024 0C000000 		.4byte	.LFE4-.LFB4
 1010 0028 00000000 		.4byte	.LFB5
 1011 002c 0C000000 		.4byte	.LFE5-.LFB5
 1012 0030 00000000 		.4byte	.LFB6
 1013 0034 0C000000 		.4byte	.LFE6-.LFB6
 1014 0038 00000000 		.4byte	.LFB7
 1015 003c 0C000000 		.4byte	.LFE7-.LFB7
 1016 0040 00000000 		.4byte	.LFB8
 1017 0044 0C000000 		.4byte	.LFE8-.LFB8
 1018 0048 00000000 		.4byte	.LFB9
 1019 004c 0C000000 		.4byte	.LFE9-.LFB9
 1020 0050 00000000 		.4byte	.LFB10
 1021 0054 0C000000 		.4byte	.LFE10-.LFB10
 1022 0058 00000000 		.4byte	.LFB11
 1023 005c 14000000 		.4byte	.LFE11-.LFB11
 1024 0060 00000000 		.4byte	.LFB12
 1025 0064 14000000 		.4byte	.LFE12-.LFB12
 1026 0068 00000000 		.4byte	.LFB0
 1027 006c 34000000 		.4byte	.LFE0-.LFB0
 1028 0070 00000000 		.4byte	.LFB2
 1029 0074 18000000 		.4byte	.LFE2-.LFB2
 1030 0078 00000000 		.4byte	0
 1031 007c 00000000 		.4byte	0
 1032              		.section	.debug_ranges,"",%progbits
 1033              	.Ldebug_ranges0:
 1034 0000 00000000 		.4byte	.LFB1
 1035 0004 02000000 		.4byte	.LFE1
 1036 0008 00000000 		.4byte	.LFB3
 1037 000c 02000000 		.4byte	.LFE3
 1038 0010 00000000 		.4byte	.LFB4
 1039 0014 0C000000 		.4byte	.LFE4
 1040 0018 00000000 		.4byte	.LFB5
 1041 001c 0C000000 		.4byte	.LFE5
 1042 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 33


 1043 0024 0C000000 		.4byte	.LFE6
 1044 0028 00000000 		.4byte	.LFB7
 1045 002c 0C000000 		.4byte	.LFE7
 1046 0030 00000000 		.4byte	.LFB8
 1047 0034 0C000000 		.4byte	.LFE8
 1048 0038 00000000 		.4byte	.LFB9
 1049 003c 0C000000 		.4byte	.LFE9
 1050 0040 00000000 		.4byte	.LFB10
 1051 0044 0C000000 		.4byte	.LFE10
 1052 0048 00000000 		.4byte	.LFB11
 1053 004c 14000000 		.4byte	.LFE11
 1054 0050 00000000 		.4byte	.LFB12
 1055 0054 14000000 		.4byte	.LFE12
 1056 0058 00000000 		.4byte	.LFB0
 1057 005c 34000000 		.4byte	.LFE0
 1058 0060 00000000 		.4byte	.LFB2
 1059 0064 18000000 		.4byte	.LFE2
 1060 0068 00000000 		.4byte	0
 1061 006c 00000000 		.4byte	0
 1062              		.section	.debug_line,"",%progbits
 1063              	.Ldebug_line0:
 1064 0000 4B010000 		.section	.debug_str,"MS",%progbits,1
 1064      02005400 
 1064      00000201 
 1064      FB0E0D00 
 1064      01010101 
 1065              	.LASF15:
 1066 0000 72656733 		.ascii	"reg32\000"
 1066      3200
 1067              	.LASF31:
 1068 0006 476C6F62 		.ascii	"Global_Timer_ClearFIFO\000"
 1068      616C5F54 
 1068      696D6572 
 1068      5F436C65 
 1068      61724649 
 1069              	.LASF24:
 1070 001d 476C6F62 		.ascii	"Global_Timer_WritePeriod\000"
 1070      616C5F54 
 1070      696D6572 
 1070      5F577269 
 1070      74655065 
 1071              	.LASF26:
 1072 0036 70657269 		.ascii	"period\000"
 1072      6F6400
 1073              	.LASF39:
 1074 003d 476C6F62 		.ascii	"Global_Timer_interruptState\000"
 1074      616C5F54 
 1074      696D6572 
 1074      5F696E74 
 1074      65727275 
 1075              	.LASF22:
 1076 0059 476C6F62 		.ascii	"Global_Timer_ReadPeriod\000"
 1076      616C5F54 
 1076      696D6572 
 1076      5F526561 
 1076      64506572 
 1077              	.LASF3:
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 34


 1078 0071 73686F72 		.ascii	"short unsigned int\000"
 1078      7420756E 
 1078      7369676E 
 1078      65642069 
 1078      6E7400
 1079              	.LASF32:
 1080 0084 476C6F62 		.ascii	"Global_Timer_Init\000"
 1080      616C5F54 
 1080      696D6572 
 1080      5F496E69 
 1080      7400
 1081              	.LASF11:
 1082 0096 666C6F61 		.ascii	"float\000"
 1082      7400
 1083              	.LASF29:
 1084 009c 636F756E 		.ascii	"counter\000"
 1084      74657200 
 1085              	.LASF7:
 1086 00a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1086      206C6F6E 
 1086      6720756E 
 1086      7369676E 
 1086      65642069 
 1087              	.LASF1:
 1088 00bb 756E7369 		.ascii	"unsigned char\000"
 1088      676E6564 
 1088      20636861 
 1088      7200
 1089              	.LASF36:
 1090 00c9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1090      43313120 
 1090      352E342E 
 1090      31203230 
 1090      31363036 
 1091 00fc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1091      20726576 
 1091      6973696F 
 1091      6E203233 
 1091      37373135 
 1092 012f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1092      66756E63 
 1092      74696F6E 
 1092      2D736563 
 1092      74696F6E 
 1093              	.LASF14:
 1094 0157 72656738 		.ascii	"reg8\000"
 1094      00
 1095              	.LASF5:
 1096 015c 6C6F6E67 		.ascii	"long unsigned int\000"
 1096      20756E73 
 1096      69676E65 
 1096      6420696E 
 1096      7400
 1097              	.LASF9:
 1098 016e 75696E74 		.ascii	"uint8\000"
 1098      3800
 1099              	.LASF40:
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 35


 1100 0174 476C6F62 		.ascii	"Global_Timer_initVar\000"
 1100      616C5F54 
 1100      696D6572 
 1100      5F696E69 
 1100      74566172 
 1101              	.LASF12:
 1102 0189 646F7562 		.ascii	"double\000"
 1102      6C6500
 1103              	.LASF10:
 1104 0190 75696E74 		.ascii	"uint32\000"
 1104      333200
 1105              	.LASF34:
 1106 0197 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1106      74657243 
 1106      72697469 
 1106      63616C53 
 1106      65637469 
 1107              	.LASF8:
 1108 01ae 756E7369 		.ascii	"unsigned int\000"
 1108      676E6564 
 1108      20696E74 
 1108      00
 1109              	.LASF28:
 1110 01bb 476C6F62 		.ascii	"Global_Timer_WriteCounter\000"
 1110      616C5F54 
 1110      696D6572 
 1110      5F577269 
 1110      7465436F 
 1111              	.LASF21:
 1112 01d5 476C6F62 		.ascii	"Global_Timer_ReadStatusRegister\000"
 1112      616C5F54 
 1112      696D6572 
 1112      5F526561 
 1112      64537461 
 1113              	.LASF35:
 1114 01f5 43794578 		.ascii	"CyExitCriticalSection\000"
 1114      69744372 
 1114      69746963 
 1114      616C5365 
 1114      6374696F 
 1115              	.LASF27:
 1116 020b 476C6F62 		.ascii	"Global_Timer_ReadCapture\000"
 1116      616C5F54 
 1116      696D6572 
 1116      5F526561 
 1116      64436170 
 1117              	.LASF23:
 1118 0224 476C6F62 		.ascii	"Global_Timer_SetInterruptMode\000"
 1118      616C5F54 
 1118      696D6572 
 1118      5F536574 
 1118      496E7465 
 1119              	.LASF33:
 1120 0242 476C6F62 		.ascii	"Global_Timer_Start\000"
 1120      616C5F54 
 1120      696D6572 
 1120      5F537461 
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 36


 1120      727400
 1121              	.LASF18:
 1122 0255 476C6F62 		.ascii	"Global_Timer_Enable\000"
 1122      616C5F54 
 1122      696D6572 
 1122      5F456E61 
 1122      626C6500 
 1123              	.LASF17:
 1124 0269 73697A65 		.ascii	"sizetype\000"
 1124      74797065 
 1124      00
 1125              	.LASF6:
 1126 0272 6C6F6E67 		.ascii	"long long int\000"
 1126      206C6F6E 
 1126      6720696E 
 1126      7400
 1127              	.LASF25:
 1128 0280 696E7465 		.ascii	"interruptMode\000"
 1128      72727570 
 1128      744D6F64 
 1128      6500
 1129              	.LASF30:
 1130 028e 476C6F62 		.ascii	"Global_Timer_ReadCounter\000"
 1130      616C5F54 
 1130      696D6572 
 1130      5F526561 
 1130      64436F75 
 1131              	.LASF2:
 1132 02a7 73686F72 		.ascii	"short int\000"
 1132      7420696E 
 1132      7400
 1133              	.LASF19:
 1134 02b1 476C6F62 		.ascii	"Global_Timer_Stop\000"
 1134      616C5F54 
 1134      696D6572 
 1134      5F53746F 
 1134      7000
 1135              	.LASF4:
 1136 02c3 6C6F6E67 		.ascii	"long int\000"
 1136      20696E74 
 1136      00
 1137              	.LASF13:
 1138 02cc 63686172 		.ascii	"char\000"
 1138      00
 1139              	.LASF16:
 1140 02d1 6C6F6E67 		.ascii	"long double\000"
 1140      20646F75 
 1140      626C6500 
 1141              	.LASF0:
 1142 02dd 7369676E 		.ascii	"signed char\000"
 1142      65642063 
 1142      68617200 
 1143              	.LASF20:
 1144 02e9 476C6F62 		.ascii	"Global_Timer_SoftwareCapture\000"
 1144      616C5F54 
 1144      696D6572 
 1144      5F536F66 
ARM GAS  C:\Users\Timmo\AppData\Local\Temp\ccYYOd4Q.s 			page 37


 1144      74776172 
 1145              	.LASF38:
 1146 0306 433A5C55 		.ascii	"C:\\Users\\Timmo\\Documents\\GitHub\\Software\\BMS\\"
 1146      73657273 
 1146      5C54696D 
 1146      6D6F5C44 
 1146      6F63756D 
 1147 0333 424D535F 		.ascii	"BMS_Workspace\\BMS_Master.cydsn\000"
 1147      576F726B 
 1147      73706163 
 1147      655C424D 
 1147      535F4D61 
 1148              	.LASF37:
 1149 0352 47656E65 		.ascii	"Generated_Source\\PSoC5\\Global_Timer.c\000"
 1149      72617465 
 1149      645F536F 
 1149      75726365 
 1149      5C50536F 
 1150              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
